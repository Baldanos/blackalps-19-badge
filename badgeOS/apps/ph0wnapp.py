import machine
import ssd1306
import framebuf
import urequests
import time

"""
This application interacts with CTFd server API to display scoreboard and ring when a first blood happens.
The scoreboard is accessible without autentication.
The access to challenges is done with API key.
"""

class App:
    def __init__(self, badge):
        self.badge = badge
        self.NAME = "Ph0wn"
        self.headers={'Authorization': 'Token xxxx'}
        self.headers.update({"Content-Type": "application/json"})
        self.server = 'https://ctf.ph0wn.org'
        self.ph0wn = bytearray(b'\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x7f\x7f\x7f??\x1f\x1f\x1f\x0f\x0f\x07\x07\x07\x07\x07\x07\x07\x07\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xf3\xf3\xf3\xe1\xe1\xe0\xc0\xc0\xc0\x80\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x7f\x7f\x7f\x7f\x7f\x7f\xff\xff\x7f\x7f\x7f\x7f\x7f\x7f\xff\xfe\xfe\xfe\xfc\xfc\xfc\x00\x00\x00\x00\x00\x00\xff\xff\x7f\x7f\x7f\x7f\x7f\xff\xff\xff\xff\xff\xff\xff?\x0f\x07\x03\x03\x01\x01\xe1\xe1\xe1\xe1\xe1\x01\x01\x03\x03\x07\x0f?\xff\xff\xff\x7f\x7f\x7f\x7f\x7f\x7f\xff\xff\xff\xff\xff\xff\x7f\x7f\x7f\x7f\x7f\x7f\xff\xff\xff\xff\xff\xff\x7f\x7f\x7f\x7f\x7f\x7f\xff\xff\xff\x7f\x7f\x7f\x7f\x7f\x7f\xff\xff\x7f\x7f\x7f\x7f\x7f\x7f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\xe1\xf8\xf8\xf8\xf8\xf0\x00\x00\x00\x00\x01\x03\xff\xff\xff\x00\x00\x00\x00\x00\x00\xf0\xf8\xf8\xf8\xf8\xf0\x00\x00\x00\x00\x03\x07\xff\xff\x00\x00\x00\x00\x00\x00\x00\x7f?\x0f\x03\x80\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\xff\xff\xff\x00\x00\x00\x00\x00\x00\xf1\xf8\xf8\xf8\xf8\xf0\x00\x00\x00\x00\x01\x03\x1f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\xff\xff\xff\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\xc0\xf0\xfc\xff\xff\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\x7f\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\x7f\x00\x00\x00\x00\x00\xc0\xff\xff\xff\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\xe1\xe1\xe1\xe1\xe1\xe1\xe0\xe0\xe0\xf0\xf8\xfc\xff\xff\xff\xe0\xe0\xe0\xe0\xe0\xe0\xff\xff\xff\xff\xff\xff\xe0\xe0\xe0\xe0\xe0\xe0\xff\xff\xff\xfc\xf8\xf0\xe0\xe0\xe0\xe1\xe1\xe1\xe1\xe1\xe0\xe0\xe0\xf0\xf8\xfc\xff\xff\xff\xff\xe0\xe0\xe0\xe0\xe0\xe0\xe1\xe1\xe1\xe1\xe1\xf0\xe0\xe0\xe0\xe0\xe0\xe0\xe1\xe1\xe1\xe1\xe1\xf0\xf0\xf8\xfc\xfe\xff\xff\xff\xff\xff\xe0\xe0\xe0\xe0\xe0\xe0\xff\xff\xff\xff\xff\xff\xe0\xe0\xe0\xe0\xe0\xe0\xe0\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff')
        self.first_blood = bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\xc0\xc0\xc0|||||||||||\xfc\xc0\xc0\xc0\x80\x00\x00\x00\x00\x00\x00\x00\x00\xc0\xc0\xc0\xc0\xfc||||||||||\xfc\xc0\xc0\xc0\x80\x00\x00\x00\x00\x00\x00\x00\x00\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0\x00\x00\x00\x00\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0\x00\x00\x00\x00\x00\x00\x00\x00\xfc\xfc\xfc\xfc\xfc\xfc\xfc\xfc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\x07\x07\x07\x07\x07\x07\x07\xff\xfc\xfc\xfc\xf8\x00\x00\x00\x00\x00\x00\x00\xe7\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb7\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x0f\x07\x07?x|x|\x0f\x07\x07?\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xffxxxxxxx\xff\x87\x87\x87\x87\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00?\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\x80\x80\x80\x80\x80\x80\x80\xff\xff\xff\xff\x1f\x00\x00\x00\x00\x00\x00\x00\xcf\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x07\x07\x07\x07\x07\x07\x07\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x0f\x0f\x0f\x7f\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xff\x0f\x0f\x0f\x07\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x0f\x0f\x1f\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xfa\x0f\x0f\x0f\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x0f\x0f\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x0f\x0f\x0f\x00\x00\x00\x00\x00\x00\x00\x00\xf8\xf8\xf8\xf8\xf8\xf8\xf8\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
        self.i2c = machine.I2C(scl=machine.Pin(27), sda=machine.Pin(26))
        self.oled = ssd1306.SSD1306_I2C(128, 64, self.i2c, 0x3c)
        self.challenges = {}
        self.p18 = machine.Pin(18, machine.Pin.OUT)

    def show_ph0wn_logo(self):
        self.badge.screen.clear()
        fb = framebuf.FrameBuffer(self.ph0wn, 128, 64, framebuf.MVLSB)
        self.oled.blit(fb, 0,0)
        self.oled.show()
    
    def show_blood_logo(self):
        self.badge.screen.clear()
        fb = framebuf.FrameBuffer(self.first_blood, 128, 64, framebuf.MVLSB)
        self.oled.blit(fb, 0,0)
        self.oled.show()

    def ring_alarm(self):
        pwm18 = machine.PWM(self.p18)
        for i in range(1,100):
            pwm18.freq(i*20)
            time.sleep(0.01)
        
        for i in range(100,1,-1):
            pwm18.freq(i*20)
            time.sleep(0.01)

        pwm18.deinit()

    def check_first_blood(self):
        if self.badge.net.online():
            response = urequests.get(self.server + "/api/v1/challenges", headers=self.headers)
            try:
                data = response.json()
            except ValueError:
                return
            
            for challenge in data["data"]:
                if challenge["name"] not in self.challenges:
                    self.challenges[challenge["name"]] = False
                # Check for first blood
                if challenge["solves"] != 0 and not self.challenges[challenge["name"]]:
                    self.challenges[challenge["name"]] = True
                    self.show_blood_logo()
                    for i in range(3):
                        self.ring_alarm()
                    self.badge.set_title("First blood")
                    self.badge.screen.textbox([challenge["name"]])
                    time.sleep(10)

    def show_scoreboard(self):
        if self.badge.net.online():
            self.badge.set_title("Scoreboard")
            response = urequests.get(self.server + "/api/v1/scoreboard/top/5")
            try:
                data = response.json()
            except ValueError:
                self.badge.show_text("Invalid JSON received")
                self.badge.net.offline()
                return

            teams = []
            for i in range(5):
                teams.append(str(i+1) + ". " + data["data"][str(i+1)]["name"])
            
            self.badge.screen.textbox(teams)
        else:
            self.badge.set_title("Offline")

    def run(self):
        while True:
            self.show_ph0wn_logo()
            time.sleep(10)
            self.check_first_blood()
            self.show_scoreboard()
            time.sleep(30)
        
        self.badge.buttons.wait_button()
